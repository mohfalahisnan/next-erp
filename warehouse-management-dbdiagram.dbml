// Warehouse Management System Database Design
// Generated for dbdiagram.io

Project warehouse_management {
  database_type: 'PostgreSQL'
  Note: '''
    # Warehouse Management System
    A comprehensive warehouse management system that handles:
    - Multi-location inventory with product variants
    - Employee role management
    - Inter-warehouse transfers
    - Shipping and order fulfillment
    - Real-time inventory tracking
  '''
}

// User Management (from existing auth system)
Table user {
  id text [pk]
  name text [not null]
  email text [unique, not null]
  emailVerified boolean [default: false]
  image text
  createdAt timestamp [default: `now()`]
  updatedAt timestamp [default: `now()`]
  roleId uuid [ref: > roles.id]
  status varchar(20) [default: 'Active']
  departmentId uuid [ref: > departments.id]
  position text
  salary decimal(10,2)
  hireDate timestamp
  phone text
  address text
  lastLogin timestamp
  
  Note: 'Extended user table with employee information'
}

Table roles {
  id uuid [pk, default: `gen_random_uuid()`]
  name text [not null]
  description text
  permissions text[]
  department_id uuid
  created_at timestamp [default: `now()`]
  updated_at timestamp [default: `now()`]
  
  Note: 'User roles and permissions'
}

Table departments {
  id uuid [pk, default: `gen_random_uuid()`]
  name text [not null]
  description text
  budget decimal(12,2)
  manager_id uuid
  created_at timestamp [default: `now()`]
  updated_at timestamp [default: `now()`]
  
  Note: 'Company departments'
}

Table projects {
  id uuid [pk, default: `gen_random_uuid()`]
  name text [not null]
  description text
  status varchar(20) [default: 'Planning', note: 'Planning, In Progress, Completed, On Hold, Cancelled']
  priority varchar(20) [default: 'Medium', note: 'Low, Medium, High, Critical']
  start_date timestamp [not null]
  end_date timestamp
  budget decimal(12,2)
  department_id uuid
  manager_id uuid
  progress integer [default: 0]
  is_active boolean [default: true]
  created_at timestamp [default: `now()`]
  updated_at timestamp [default: `now()`]
  
  Note: 'Company projects'
}

// Warehouse Management Tables
Table warehouses {
  id uuid [pk, default: `gen_random_uuid()`]
  name varchar(100) [not null]
  code varchar(20) [unique, not null]
  address text
  city varchar(50)
  state varchar(50)
  postal_code varchar(20)
  country varchar(50)
  phone varchar(20)
  email varchar(100)
  manager_id text [ref: > user.id]
  capacity integer
  is_active boolean [default: true]
  created_at timestamp [default: `now()`]
  updated_at timestamp [default: `now()`]
  
  Note: 'Physical warehouse locations'
}

Table product_categories {
  id uuid [pk, default: `gen_random_uuid()`]
  name varchar(100) [not null]
  description text
  parent_id uuid [ref: > product_categories.id]
  created_at timestamp [default: `now()`]
  updated_at timestamp [default: `now()`]
  
  Note: 'Hierarchical product categories'
}

Table suppliers {
  id uuid [pk, default: `gen_random_uuid()`]
  name varchar(200) [not null]
  contact_person varchar(100)
  email varchar(100)
  phone varchar(20)
  address text
  city varchar(50)
  state varchar(50)
  postal_code varchar(20)
  country varchar(50)
  payment_terms varchar(100)
  is_active boolean [default: true]
  created_at timestamp [default: `now()`]
  updated_at timestamp [default: `now()`]
  
  Note: 'Product suppliers and vendors'
}

Table products {
  id uuid [pk, default: `gen_random_uuid()`]
  sku varchar(50) [unique, not null]
  name varchar(200) [not null]
  description text
  category_id uuid [ref: > product_categories.id]
  supplier_id uuid [ref: > suppliers.id]
  base_cost_price decimal(10,2)
  weight decimal(8,2)
  dimensions varchar(50)
  image_url varchar(500)
  is_active boolean [default: true]
  created_at timestamp [default: `now()`]
  updated_at timestamp [default: `now()`]
  
  Note: 'Base product information'
}

Table product_variants {
  id uuid [pk, default: `gen_random_uuid()`]
  product_id uuid [ref: > products.id, not null]
  sku varchar(50) [unique, not null]
  name varchar(200) [not null]
  size varchar(50)
  color varchar(50)
  material varchar(100)
  model varchar(100)
  retail_price decimal(10,2) [not null]
  wholesale_price decimal(10,2) [not null]
  cost_price decimal(10,2)
  weight decimal(8,2)
  dimensions varchar(50)
  barcode varchar(100)
  image_url varchar(500)
  is_active boolean [default: true]
  created_at timestamp [default: `now()`]
  updated_at timestamp [default: `now()`]
  
  Note: 'Product variants with individual pricing and attributes'
}

Table inventory {
  id uuid [pk, default: `gen_random_uuid()`]
  product_variant_id uuid [ref: > product_variants.id, not null]
  warehouse_id uuid [ref: > warehouses.id, not null]
  location varchar(50)
  quantity integer [not null, default: 0]
  reserved_quantity integer [default: 0]
  reorder_point integer [default: 0]
  max_stock integer
  last_counted_at timestamp
  created_at timestamp [default: `now()`]
  updated_at timestamp [default: `now()`]
  
  indexes {
    (product_variant_id, warehouse_id, location) [unique]
    (product_variant_id, warehouse_id)
  }
  
  Note: 'Stock levels per variant per warehouse'
}

Table inventory_movements {
  id uuid [pk, default: `gen_random_uuid()`]
  product_variant_id uuid [ref: > product_variants.id, not null]
  warehouse_id uuid [ref: > warehouses.id, not null]
  movement_type varchar(20) [not null, note: 'IN, OUT, TRANSFER, ADJUSTMENT']
  quantity integer [not null]
  reference_type varchar(50) [note: 'PURCHASE, SALE, TRANSFER, ADJUSTMENT']
  reference_id uuid
  notes text
  performed_by text [ref: > user.id]
  created_at timestamp [default: `now()`]
  
  indexes {
    product_variant_id
    warehouse_id
    movement_type
    created_at
  }
  
  Note: 'Audit trail for all inventory changes'
}

Table transfers {
  id uuid [pk, default: `gen_random_uuid()`]
  transfer_number varchar(50) [unique, not null]
  from_warehouse_id uuid [ref: > warehouses.id, not null]
  to_warehouse_id uuid [ref: > warehouses.id, not null]
  status varchar(20) [default: 'PENDING', note: 'PENDING, APPROVED, IN_TRANSIT, COMPLETED, CANCELLED']
  requested_by text [ref: > user.id]
  approved_by text [ref: > user.id]
  shipped_at timestamp
  received_at timestamp
  notes text
  created_at timestamp [default: `now()`]
  updated_at timestamp [default: `now()`]
  
  indexes {
    status
    from_warehouse_id
    to_warehouse_id
    transfer_number
  }
  
  Note: 'Inter-warehouse transfer requests'
}

Table transfer_items {
  id uuid [pk, default: `gen_random_uuid()`]
  transfer_id uuid [ref: > transfers.id, not null]
  product_variant_id uuid [ref: > product_variants.id, not null]
  requested_quantity integer [not null]
  shipped_quantity integer [default: 0]
  received_quantity integer [default: 0]
  created_at timestamp [default: `now()`]
  
  Note: 'Individual items in transfer requests'
}

Table customers {
  id uuid [pk, default: `gen_random_uuid()`]
  name varchar(200) [not null]
  email varchar(100)
  phone varchar(20)
  billing_address text
  shipping_address text
  city varchar(50)
  state varchar(50)
  postal_code varchar(20)
  country varchar(50)
  customer_type varchar(20) [default: 'RETAIL', note: 'RETAIL, WHOLESALE']
  credit_limit decimal(10,2)
  is_active boolean [default: true]
  created_at timestamp [default: `now()`]
  updated_at timestamp [default: `now()`]
  
  Note: 'Customer information for orders'
}

Table customer_addresses {
  id uuid [pk, default: `gen_random_uuid()`]
  customer_id uuid [ref: > customers.id, not null]
  address_type varchar(20) [default: 'billing', note: 'billing, shipping']
  address_line_1 text [not null]
  address_line_2 text
  city varchar(50) [not null]
  state varchar(50) [not null]
  postal_code varchar(20) [not null]
  country varchar(50) [not null]
  is_default boolean [default: false]
  is_active boolean [default: true]
  created_at timestamp [default: `now()`]
  updated_at timestamp [default: `now()`]
  
  Note: 'Customer billing and shipping addresses'
}

Table orders {
  id uuid [pk, default: `gen_random_uuid()`]
  order_number varchar(50) [unique, not null]
  customer_id uuid [ref: > customers.id, not null]
  warehouse_id uuid [ref: > warehouses.id, not null]
  status varchar(20) [default: 'PENDING', note: 'PENDING, CONFIRMED, PICKING, PACKED, SHIPPED, DELIVERED, CANCELLED']
  order_date timestamp [default: `now()`]
  required_date timestamp
  shipped_date timestamp
  total_amount decimal(10,2)
  shipping_cost decimal(10,2)
  tax_amount decimal(10,2)
  discount_amount decimal(10,2)
  notes text
  created_by text [ref: > user.id]
  created_at timestamp [default: `now()`]
  updated_at timestamp [default: `now()`]
  
  indexes {
    status
    customer_id
    warehouse_id
    order_number
    order_date
  }
  
  Note: 'Customer orders for fulfillment'
}

Table order_items {
  id uuid [pk, default: `gen_random_uuid()`]
  order_id uuid [ref: > orders.id, not null]
  product_variant_id uuid [ref: > product_variants.id, not null]
  quantity integer [not null]
  unit_price decimal(10,2) [not null]
  total_price decimal(10,2) [not null]
  created_at timestamp [default: `now()`]
  
  Note: 'Individual items in customer orders'
}

Table carriers {
  id uuid [pk, default: `gen_random_uuid()`]
  name varchar(100) [not null]
  code varchar(20) [unique, not null]
  contact_info text
  api_endpoint varchar(200)
  api_key varchar(200)
  is_active boolean [default: true]
  created_at timestamp [default: `now()`]
  updated_at timestamp [default: `now()`]
  
  Note: 'Shipping carriers and logistics providers'
}

Table shipments {
  id uuid [pk, default: `gen_random_uuid()`]
  shipment_number varchar(50) [unique, not null]
  order_id uuid [ref: > orders.id, not null]
  carrier_id uuid [ref: > carriers.id]
  tracking_number varchar(100)
  shipping_method varchar(50)
  status varchar(20) [default: 'PENDING', note: 'PENDING, PICKED_UP, IN_TRANSIT, DELIVERED, EXCEPTION']
  shipped_date timestamp
  estimated_delivery timestamp
  actual_delivery timestamp
  shipping_cost decimal(10,2)
  weight decimal(8,2)
  dimensions varchar(50)
  created_at timestamp [default: `now()`]
  updated_at timestamp [default: `now()`]
  
  indexes {
    tracking_number
    status
    order_id
    carrier_id
  }
  
  
  Note: 'Shipment tracking and logistics'
}

// Additional Auth Tables (if needed)
Table account {
  id text [pk]
  accountId text [not null]
  providerId text [not null]
  userId text [ref: > user.id, not null]
  accessToken text
  refreshToken text
  idToken text
  accessTokenExpiresAt timestamp
  refreshTokenExpiresAt timestamp
  scope text
  password text
  createdAt timestamp [default: `now()`]
  updatedAt timestamp [default: `now()`]
}

Table session {
  id text [pk]
  expiresAt timestamp [not null]
  token text [unique, not null]
  createdAt timestamp [default: `now()`]
  updatedAt timestamp [default: `now()`]
  ipAddress text
  userAgent text
  userId text [ref: > user.id, not null]
}

Table verification {
  id text [pk]
  identifier text [not null]
  value text [not null]
  expiresAt timestamp [not null]
  createdAt timestamp [default: `now()`]
  updatedAt timestamp [default: `now()`]
}

// Relationship Groups for better visualization
Ref: products.id < product_variants.product_id [note: 'One product can have multiple variants']
Ref: product_variants.id < inventory.product_variant_id [note: 'Each variant tracked per warehouse']
Ref: product_variants.id < inventory_movements.product_variant_id [note: 'Movement history per variant']
Ref: product_variants.id < transfer_items.product_variant_id [note: 'Transfer items reference variants']
Ref: product_variants.id < order_items.product_variant_id [note: 'Order items reference variants']

Ref: warehouses.id < inventory.warehouse_id [note: 'Inventory per warehouse']
Ref: warehouses.id < inventory_movements.warehouse_id [note: 'Movements per warehouse']
Ref: warehouses.id < transfers.from_warehouse_id [note: 'Transfer source']
Ref: warehouses.id < transfers.to_warehouse_id [note: 'Transfer destination']
Ref: warehouses.id < orders.warehouse_id [note: 'Order fulfillment warehouse']

Ref: transfers.id < transfer_items.transfer_id [note: 'Transfer line items']
Ref: orders.id < order_items.order_id [note: 'Order line items']
Ref: orders.id < shipments.order_id [note: 'Order shipments']
Ref: carriers.id < shipments.carrier_id [note: 'Shipment carriers']
Ref: customers.id < orders.customer_id [note: 'Customer orders']

Ref: user.id < inventory_movements.performed_by [note: 'User who performed movement']
Ref: user.id < transfers.requested_by [note: 'Transfer requester']
Ref: user.id < transfers.approved_by [note: 'Transfer approver']
Ref: user.id < orders.created_by [note: 'Order creator']
Ref: user.id < warehouses.manager_id [note: 'Warehouse manager']
Ref: user.id < departments.manager_id [note: 'Department manager']

Ref: roles.id < user.roleId [note: 'User roles']
Ref: departments.id < user.departmentId [note: 'User departments']
Ref: departments.id < projects.department_id [note: 'Project departments']
Ref: user.id < projects.manager_id [note: 'Project managers']
Ref: departments.id < roles.department_id [note: 'Department roles']
Ref: customers.id < customer_addresses.customer_id [note: 'Customer addresses']
Ref: product_categories.id < products.category_id [note: 'Product categories']
Ref: suppliers.id < products.supplier_id [note: 'Product suppliers']
Ref: product_categories.id < product_categories.parent_id [note: 'Category hierarchy']

Ref: user.id < account.userId [note: 'User accounts']
Ref: user.id < session.userId